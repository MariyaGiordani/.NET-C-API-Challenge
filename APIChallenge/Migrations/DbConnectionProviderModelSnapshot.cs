// <auto-generated />
using System;
using APIChallenge.Providers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIChallenge.Migrations
{
    [DbContext(typeof(DbConnectionProvider))]
    partial class DbConnectionProviderModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIChallenge.Models.Security", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.Property<byte[]>("SaltPassword")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("SALT_PASSWORD");

                    b.HasKey("Id");

                    b.ToTable("SECURITY");
                });

            modelBuilder.Entity("APIChallenge.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USER_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USER_EMAIL");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USER_PASSWORD");

                    b.HasKey("Id");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("APIChallenge.Models.Security", b =>
                {
                    b.HasOne("APIChallenge.Models.User", "User")
                        .WithOne("Security")
                        .HasForeignKey("APIChallenge.Models.Security", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("APIChallenge.Models.User", b =>
                {
                    b.Navigation("Security");
                });
#pragma warning restore 612, 618
        }
    }
}
